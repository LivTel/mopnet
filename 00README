mopnet - network enable of MOPTOP process designed to run on separate NUC PCs.
         These notes are for version 0.26 for testing in ARI darkroom.
         Filter wheel functions are not available.

0.31     -b now dynamic. Run synchronisation improved. Minor typos/bugfixes 

0.30     Path creation added.     

0.29     Added -U option. Synchronises run numbers.

0.28     Default 2xbinning. Removed FITS header duplicates

0.27     Added remote -k process kill option. Uses site IP addresses

0.26	 Added Starlight Xpress 5 position filter wheel, option -w
         Removed redundant synchronisation code from mop_utl.c
         Makefile now generates full dependencies
         Removed -N fixed filer option


Description:
Version of the MOPTOP control process intended to run on two separate PCs.
It uses UDP datagrams to start a run and synchronise processes. 
A single mopnet process is run on each PC and controlled via the mopcmd utility.
The process run as Master (on NUC marked MOPTOP1) and Slave (on NUC marked MOPTOP2).
The camera ID set using the -c option which also sets the approriate Master/Slave options. 

UDP port numbers are hard coded
  12000 - mopcmd send commands to mopnet master 
  12001 - mopnet master process, controls camera 1 and  rotator
  12002 - mopnet slave  process, controls camera 2 only

To build and release mopnet 
  ./build
  sudo cp mopnet mopcmd moprun /usr/local/bin

The settings in this release use site network addresses.
IP addresses and default run options are built into mopnet, see mop_dat.h to modify. 


Testing & Debug
Check that no mopnet process is already running on each NUC, 'ps -A | grep mopnet',  then ...
  ./mopnet -c1 -d8 &  Do on MOPTOP1 connected to camera CAM1
  ./mopnet -c2 -d8 &  Do on MOPTOP2 connected to camera CAM2

The processes can be run on the same NUC but require appropriate options. For example ...
  ./mopnet -c1 -i1 -M 192.168.1.28:12001 -S 192.168.1.28:12002 &
  ./mopnet -c2 -i2 -M 192.168.1.28:12001 -S 192.168.1.28:12002 &
This is not recommended as 2 cameras on 1 NUC is unreliable.
     
-S identifies the Slave IP:port, -M the Master process IP:port

Once mopnet process are running, mopcmd is used to send options to the master, which forwards to the slave process.
It waits for mopnet replies showing the image file created. 

  ./mopcmd -r1 -n8 -d5  - To run 1 rotation, 8 positions with debug level = 5 (INF)
                          Waits for 2 x 1 x 8 = 16 reply messages

  ./mopcmd -k           - To kill processes or use "pkill mopnet" on each host PC

The mopcmd utility should only be run on MOPTOP1.


Release Running
Use the daemon-like moprun utility to stop/start mopnet on each pc. For example ...
  moprun start
  moprun stop
  moprun status

mopcmd can be used to start a run but easier to copy and adapt the template script ~/scripts/goexample which automatically creates the destination directory.

moptemplate is a template script for observations. Copy, modify and run. 

For help:
  ./mopnet -h  - Gives a brief description of arguments and default values.

